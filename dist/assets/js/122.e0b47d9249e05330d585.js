"use strict";(self.webpackChunkmynextlesson_synthesis=self.webpackChunkmynextlesson_synthesis||[]).push([[122],{122:function(e,s,t){t.d(s,{ProgressTracker:function(){return i}});var r=t(626),a=t(651);t(452);class i{constructor(){this.isReady=!1,this.progressData=null,this.currentSession=null,this.analytics=null,this.storageKey="ilearn_progress",this.sessionKey="ilearn_session",this.metrics={lessonsCompleted:0,totalTimeSpent:0,averageSynthesisTime:0,preferredAge:null,preferredTone:null,completionRate:0,streakDays:0,lastLessonDate:null}}async initialize(){try{r.Vy.info("progress_tracker_init","Initializing progress tracker"),await this.loadProgressData(),this.initializeSession(),await this.initializeAnalytics(),this.setupAutoSave(),this.isReady=!0,r.Vy.info("progress_tracker_ready","Progress tracker initialized successfully")}catch(e){throw a.zc.handle(e,{context:"progress_tracker",phase:"initialization"}),e}}async loadProgressData(){try{const e=localStorage.getItem(this.storageKey);e?(this.progressData=JSON.parse(e),r.Vy.info("progress_tracker_loaded","Progress data loaded from storage")):(this.progressData=this.createInitialProgressData(),r.Vy.info("progress_tracker_initialized","New progress data initialized")),this.validateProgressData()}catch(e){r.Vy.warn("progress_tracker_load_failed","Failed to load progress data, creating new"),this.progressData=this.createInitialProgressData()}}createInitialProgressData(){return{version:"1.0.0",createdAt:(new Date).toISOString(),lastUpdated:(new Date).toISOString(),user:{id:this.generateUserId(),preferences:{defaultAge:25,defaultTone:"neutral",accessibility:{highContrast:!1,reducedMotion:!1,screenReader:!1}}},lessons:{completed:[],inProgress:[],bookmarked:[]},analytics:{totalLessons:0,totalTimeSpent:0,averageSynthesisTime:0,completionRate:0,streakDays:0,lastLessonDate:null,preferredAge:null,preferredTone:null,monthlyProgress:{},dailyActivity:{}},achievements:[],sessions:[]}}generateUserId(){return"user_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}validateProgressData(){const e=["version","createdAt","user","lessons","analytics"];for(const s of e)if(!this.progressData[s])throw new Error(`Invalid progress data: missing ${s}`);Array.isArray(this.progressData.lessons.completed)||(this.progressData.lessons.completed=[]),Array.isArray(this.progressData.lessons.inProgress)||(this.progressData.lessons.inProgress=[]),Array.isArray(this.progressData.lessons.bookmarked)||(this.progressData.lessons.bookmarked=[])}initializeSession(){const e="session_"+Date.now()+"_"+Math.random().toString(36).substr(2,9);this.currentSession={id:e,startTime:(new Date).toISOString(),lessons:[],totalTime:0,synthesisTimes:[],parameters:{ages:[],tones:[]}},localStorage.setItem(this.sessionKey,JSON.stringify(this.currentSession)),r.Vy.info("progress_tracker_session",`New session started: ${e}`)}async initializeAnalytics(){this.analytics={trackEvent:(e,s)=>this.trackEvent(e,s),trackLesson:e=>this.trackLesson(e),trackSynthesis:e=>this.trackSynthesis(e),getInsights:()=>this.getInsights(),getProgress:()=>this.getProgress(),getRecommendations:()=>this.getRecommendations()}}setupAutoSave(){this.autoSaveInterval=setInterval(()=>{this.saveProgressData()},3e5),window.addEventListener("beforeunload",()=>{this.saveProgressData()})}recordLessonLoad(e,s,t,i){try{const a={day:e,age:s,tone:t,synthesisTime:i,timestamp:(new Date).toISOString(),sessionId:this.currentSession.id};this.currentSession.lessons.push(a),this.currentSession.synthesisTimes.push(i),this.currentSession.parameters.ages.push(s),this.currentSession.parameters.tones.push(t),localStorage.setItem(this.sessionKey,JSON.stringify(this.currentSession)),this.trackSynthesis({day:e,age:s,tone:t,duration:i,success:!0}),r.Vy.info("progress_tracker_lesson_loaded",`Lesson ${e} loaded in ${i}ms`)}catch(e){a.zc.handle(e,{context:"progress_tracker",phase:"record_lesson_load"})}}recordLessonCompletion(e,s,t,i,n="full"){try{const a={day:e,age:s,tone:t,duration:i,completionType:n,timestamp:(new Date).toISOString(),sessionId:this.currentSession.id};this.progressData.lessons.completed.push(a),this.updateAnalytics(a),this.checkAchievements(),this.saveProgressData(),r.Vy.info("progress_tracker_lesson_completed",`Lesson ${e} completed (${n})`)}catch(e){a.zc.handle(e,{context:"progress_tracker",phase:"record_lesson_completion"})}}trackSynthesis(e){try{const s={...e,timestamp:(new Date).toISOString(),sessionId:this.currentSession.id};this.progressData.analytics.synthesisHistory||(this.progressData.analytics.synthesisHistory=[]),this.progressData.analytics.synthesisHistory.push(s),this.progressData.analytics.synthesisHistory.length>1e3&&(this.progressData.analytics.synthesisHistory=this.progressData.analytics.synthesisHistory.slice(-1e3)),this.updateAverageSynthesisTime()}catch(e){a.zc.handle(e,{context:"progress_tracker",phase:"track_synthesis"})}}trackEvent(e,s){try{const t={event:e,data:s,timestamp:(new Date).toISOString(),sessionId:this.currentSession.id};this.progressData.analytics.events||(this.progressData.analytics.events=[]),this.progressData.analytics.events.push(t),this.progressData.analytics.events.length>500&&(this.progressData.analytics.events=this.progressData.analytics.events.slice(-500))}catch(e){a.zc.handle(e,{context:"progress_tracker",phase:"track_event"})}}updateAnalytics(e){const s=this.progressData.analytics;s.totalLessons++,s.totalTimeSpent+=e.duration,s.lastLessonDate=e.timestamp,s.completionRate=this.calculateCompletionRate(),s.streakDays=this.calculateStreak(),this.updatePreferences(e.age,e.tone),this.updateMonthlyProgress(e),this.updateDailyActivity(e)}calculateCompletionRate(){const e=this.progressData.analytics.totalLessons,s=this.progressData.sessions.length;return 0===s?0:Math.round(e/s*100)}calculateStreak(){const e=this.progressData.lessons.completed;if(0===e.length)return 0;const s=e.sort((e,s)=>new Date(s.timestamp)-new Date(e.timestamp));let t=0,r=new Date;for(const e of s){const s=new Date(e.timestamp);if(Math.floor((r-s)/864e5)!==t)break;t++}return t}updatePreferences(e,s){const t=this.progressData.analytics;t.ageFrequency||(t.ageFrequency={}),t.ageFrequency[e]=(t.ageFrequency[e]||0)+1;const r=Object.entries(t.ageFrequency).sort(([,e],[,s])=>s-e)[0];t.preferredAge=r?parseInt(r[0]):e,t.toneFrequency||(t.toneFrequency={}),t.toneFrequency[s]=(t.toneFrequency[s]||0)+1;const a=Object.entries(t.toneFrequency).sort(([,e],[,s])=>s-e)[0];t.preferredTone=a?a[0]:s}updateMonthlyProgress(e){const s=new Date(e.timestamp),t=`${s.getFullYear()}-${String(s.getMonth()+1).padStart(2,"0")}`;this.progressData.analytics.monthlyProgress[t]||(this.progressData.analytics.monthlyProgress[t]={lessons:0,timeSpent:0,averageSynthesisTime:0});const r=this.progressData.analytics.monthlyProgress[t];r.lessons++,r.timeSpent+=e.duration}updateDailyActivity(e){const s=new Date(e.timestamp).toISOString().split("T")[0];this.progressData.analytics.dailyActivity[s]||(this.progressData.analytics.dailyActivity[s]={lessons:0,timeSpent:0});const t=this.progressData.analytics.dailyActivity[s];t.lessons++,t.timeSpent+=e.duration}updateAverageSynthesisTime(){const e=this.progressData.analytics.synthesisHistory;if(0===e.length)return;const s=e.reduce((e,s)=>e+s.duration,0);this.progressData.analytics.averageSynthesisTime=s/e.length}checkAchievements(){const e=this.progressData.analytics;this.progressData.achievements;1!==e.totalLessons||this.hasAchievement("first_lesson")||this.addAchievement("first_lesson","First Steps","Completed your first lesson"),10!==e.totalLessons||this.hasAchievement("ten_lessons")||this.addAchievement("ten_lessons","Getting Started","Completed 10 lessons"),50!==e.totalLessons||this.hasAchievement("fifty_lessons")||this.addAchievement("fifty_lessons","Halfway There","Completed 50 lessons"),100!==e.totalLessons||this.hasAchievement("hundred_lessons")||this.addAchievement("hundred_lessons","Century Club","Completed 100 lessons"),7!==e.streakDays||this.hasAchievement("week_streak")||this.addAchievement("week_streak","Week Warrior","Maintained a 7-day learning streak"),30!==e.streakDays||this.hasAchievement("month_streak")||this.addAchievement("month_streak","Monthly Master","Maintained a 30-day learning streak"),e.averageSynthesisTime<100&&!this.hasAchievement("fast_synthesis")&&this.addAchievement("fast_synthesis","Speed Demon","Average synthesis time under 100ms")}hasAchievement(e){return this.progressData.achievements.some(s=>s.id===e)}addAchievement(e,s,t){const a={id:e,title:s,description:t,earnedAt:(new Date).toISOString()};this.progressData.achievements.push(a);const i=new CustomEvent("achievement:earned",{detail:{achievement:a}});window.dispatchEvent(i),r.Vy.info("progress_tracker_achievement",`Achievement earned: ${s}`)}getInsights(){const e=this.progressData.analytics;return{totalLessons:e.totalLessons,totalTimeSpent:e.totalTimeSpent,averageSynthesisTime:e.averageSynthesisTime,completionRate:e.completionRate,streakDays:e.streakDays,preferredAge:e.preferredAge,preferredTone:e.preferredTone,lastLessonDate:e.lastLessonDate,achievements:this.progressData.achievements.length,monthlyProgress:e.monthlyProgress,dailyActivity:e.dailyActivity}}getProgress(){const e=this.progressData.lessons.completed;return{completedLessons:e.length,totalDays:366,progressPercentage:Math.round(e.length/366*100),remainingDays:366-e.length,completedDays:e.map(e=>e.day),recentActivity:this.getRecentActivity()}}getRecentActivity(){return this.progressData.lessons.completed.sort((e,s)=>new Date(s.timestamp)-new Date(e.timestamp)).slice(0,10).map(e=>({day:e.day,age:e.age,tone:e.tone,timestamp:e.timestamp,duration:e.duration}))}getRecommendations(){const e=this.getInsights(),s=this.getProgress(),t=[];return e.completionRate<50&&t.push({type:"completion",title:"Improve Completion Rate",description:"Try completing more lessons to build momentum",priority:"high"}),e.streakDays<3&&t.push({type:"streak",title:"Build a Learning Streak",description:"Learn daily to build a consistent habit",priority:"medium"}),s.progressPercentage<25&&t.push({type:"progress",title:"Explore More Topics",description:"Try lessons from different days to discover new content",priority:"medium"}),"neutral"===e.preferredTone&&t.push({type:"variety",title:"Try Different Tones",description:"Experiment with fun or warm tones for variety",priority:"low"}),t}saveProgressData(){try{this.progressData.lastUpdated=(new Date).toISOString(),this.currentSession&&this.progressData.sessions.push({...this.currentSession,endTime:(new Date).toISOString()}),localStorage.setItem(this.storageKey,JSON.stringify(this.progressData)),r.Vy.info("progress_tracker_saved","Progress data saved to storage")}catch(e){a.zc.handle(e,{context:"progress_tracker",phase:"save_data"})}}exportProgressData(){return{...this.progressData,exportDate:(new Date).toISOString(),exportVersion:"1.0.0"}}importProgressData(e){try{if(!(e.version&&e.user&&e.lessons&&e.analytics))throw new Error("Invalid progress data format");this.progressData=e,this.saveProgressData(),r.Vy.info("progress_tracker_imported","Progress data imported successfully")}catch(e){throw a.zc.handle(e,{context:"progress_tracker",phase:"import_data"}),e}}resetProgressData(){this.progressData=this.createInitialProgressData(),this.saveProgressData(),r.Vy.info("progress_tracker_reset","Progress data reset")}getStatus(){return{isReady:this.isReady,totalLessons:this.progressData.analytics.totalLessons,currentSession:this.currentSession?{id:this.currentSession.id,lessons:this.currentSession.lessons.length,startTime:this.currentSession.startTime}:null,lastSaved:this.progressData.lastUpdated}}async shutdown(){r.Vy.info("progress_tracker_shutdown","Shutting down progress tracker"),this.saveProgressData(),this.autoSaveInterval&&clearInterval(this.autoSaveInterval),this.currentSession&&(this.currentSession.endTime=(new Date).toISOString(),this.progressData.sessions.push(this.currentSession)),this.isReady=!1,r.Vy.info("progress_tracker_shutdown_complete","Progress tracker shutdown complete")}}}}]);